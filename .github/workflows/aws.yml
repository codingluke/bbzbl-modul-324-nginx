name: Setup and deploy to Amazon

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: us-east-1 # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: m32c4/ecr-repository # set this to your Amazon ECR repository name

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: aws

    steps:
      - name: Test
        env:
          AUTHOR: ${{ github.event.commits[0].author.name }}
        run: echo $AUTHOR

      - name: Checkout
        uses: actions/checkout@v4

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}

      - name: check ssh
        run: ls -la ~/.ssh/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v2.0.2

      - name: Terraform plan and apply
        working-directory: terraform
        env:
          AWS_SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        shell: bash
        run: |
          echo "** Running Terraform Init**"
          terraform init

          echo "** Running Terraform Validate**"
          terraform validate

          echo "** Running Terraform import for existing resources**"
          sh terraform_import_existing_aws_vpc.sh
          sh terraform_import_existing_aws_subnet.sh
          sh terraform_import_existing_aws_internet_gateways.sh
          sh terraform_import_existing_aws_route_table.sh
          sh terraform_import_existing_aws_security_group.sh
          sh terraform_import_existing_ec2_instances.sh
          sh terraform_import_existing_aws_ecr_repositories.sh

          echo "** Running Terraform plan**"
          terraform plan

          echo "** Running Terraform Apply**"
          terraform apply -auto-approve
          # write ServerIP as enviroment variable to be used in step "Set up Kamal"
          echo "SERVER_IP=$(sh ./get_public_ip.sh ubuntu2404)" >> $GITHUB_ENV

      ### KAMAL
      - name: Set up Ruby for Kamal
        uses: ruby/setup-ruby@v1
        env:
          BUNDLE_GEMFILE: ./kamal/Gemfile
        with:
          ruby-version: 3.2.2
          bundler-cache: true

      - name: Set up Docker Buildx for Kamal
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:master

      - name: Set up Kamal
        env:
          DOCKER_BUILDKIT: 1
          BUNDLE_GEMFILE: ./kamal/Gemfile
          KAMAL_SERVER_IP: ${{ env.SERVER_IP }}
          KAMAL_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # dynamically get docker password from current AWS_ACCOUNT_ID
          KAMAL_REGISTRY_PASSWORD: ${{ steps.login-ecr.outputs[format('docker_password_{0}_dkr_ecr_us_east_1_amazonaws_com', secrets.AWS_ACCOUNT_ID)] }}
        run: |
          bundle exec kamal setup
